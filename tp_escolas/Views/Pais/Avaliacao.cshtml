@model tp_escolas.Models.ViewModels.AvaliacaoViewModelAdd

@{
    ViewBag.Title = "Avaliacao";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Avaliacao</h2>
@if (ViewBag.Inst == null)
{
    @Html.Label("Não Ha escolas disponiveis para avaliar!")
}
else
{
     using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Avaliacao</h4>
            <hr />
            <div class="form-group">
                @Html.Label("Escolha a Institução", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.InstituicoesID, ViewBag.Inst as IEnumerable<SelectListItem>)

                </div>
            </div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Nota, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nota, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nota, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
